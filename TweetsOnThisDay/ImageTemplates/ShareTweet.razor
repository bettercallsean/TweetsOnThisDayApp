@using System.Web;
@using System.Text;
@using TweetsOnThisDay.Helpers;
@using TweetsOnThisDay.Models;

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet" />
<style>
	html body {
		font-family: "Roboto", "Arial", serif;
		width: 512px;
		height: 512px;
	}

	.tweet-time {
		text-align: center;
		font-size: medium;
	}

	.tweet-text {
		text-align: center;
		font-size: xx-large;
	}

	.tweet {
		border: 2px solid #455a64;
		border-radius: 5px;
		box-sizing: border-box;
		padding: 10px;
		margin: 15px 15px 20px;
		height: inherit;
	}

	img {
		max-height: 80%;
		max-width: 80%;
	}

	.image-container {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
	}

	video {
		margin: 10px;
	}

	p {
		margin: 10px;
	}

	.tweet-year {
		font-family: 'Roboto';
		padding: 15px 0 10px 0;
	}

	.profile-picture {
		width: 15%;
	}

	.card {
		border: 6px solid;
	}

	* {
		margin: 0;
		padding: 0;
		border: 0;
		outline: 0;
		vertical-align: baseline;
	}
</style>


@{
	var backgroundColours = BackgroundColourHelper.GetBackgroundColoursList();
	var backgroundColour = backgroundColours[Random.Shared.Next(backgroundColours.Count)];

	<div class="d-flex flex-column card" style="border-color: @backgroundColour">
		<div class="tweet-year text-white text-uppercase font-weight-bold" style="background-color: @backgroundColour">
			<h3 class="text-center text-white">@TweetAge year@(TweetAge > 1 ? "s" : string.Empty) ago</h3>
		</div>
        <div class="tweet shadow align-self-stretch">
        	<p class="tweet-time">@TweetContent.CreatedAt.ToString("t")</p>
        	<p class="tweet-text">@HttpUtility.HtmlDecode(TweetContent.FullText)</p>
        	@if (TweetContent.ExtendedEntities != null)
        	{
        		<div class="image-container">
        			@foreach (var media in TweetContent.ExtendedEntities.Media)
        			{
        				if (media.VideoInfo == null)
        				{
        					<img class="rounded mx-auto d-block pb-3" src="@media.MediaUrlHttps" />
        				}
        				else
        				{
        					var videoInfo = media.VideoInfo.Variants.First();
        					<video controls autoplay muted>
        						<source src="@videoInfo.Url" type="@videoInfo.ContentType" />
        						Your browser does not support the video tag.
        					</video>
        				}
        			}
        		</div>
        	}
        </div>
		<div class="d-flex flex-row align-items-center justify-content-center pb-4">
			<img class="rounded-circle img-thumbnail profile-picture" src="data:image/bmp;base64, @(Convert.ToBase64String(ProfilePicture))" />
			<p class="font-weight-light">@Username</p>
		</div>
	</div>
	
}


@code {
	[Parameter]
	public TweetModel TweetContent { get; set; }

	[Parameter]
	public byte[] ProfilePicture { get; set; }

	[Parameter]
	public string Username { get; set; }

	private int TweetAge => DateTime.Today.Year - TweetContent.CreatedAt.Year;
}
