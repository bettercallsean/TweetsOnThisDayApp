@page "/settings"


<div class="p-2">
	<div class="d-flex flex-column align-items-center justify-content-center">
	<img class="rounded-circle img-thumbnail profile-picture" src="data:image/bmp;base64, @(Convert.ToBase64String(ProfilePicture))" />
		<p class="font-weight-light">@Username</p>
	</div>

	<div class="d-flex flex-column align-items-center justify-content-center pt-4">
		<button disabled=@IsDeleteTweetButtonDisabled onclick=@DeleteTweetDataAsync type="button" class="btn btn-danger">
			Delete Tweet Data
		</button>
		<p>Size on disk: @TweetDataFileSize MB</p>
	</div>
</div>


@code {
	private bool TweetFileExists => File.Exists(Constants.TweetsByYearFile);
	private bool IsDeleteTweetButtonDisabled => !TweetFileExists;
	private double TweetDataFileSize => TweetFileExists
		? Math.Round(Directory.GetFiles(FileSystem.Current.AppDataDirectory).Sum(x => new System.IO.FileInfo(Path.Combine(FileSystem.Current.AppDataDirectory, x)).Length) / Math.Pow(2, 20), 2)
		: 0;
	private byte[] ProfilePicture { get; set; } = new byte[2];
	private string Username { get; set; }

	protected override async Task OnInitializedAsync()
	{
		ProfilePicture = await File.ReadAllBytesAsync(Constants.ProfilePictureFile);
		Username = Preferences.Get("username", string.Empty);
	}

	private async Task DeleteTweetDataAsync()
	{
		var deleteData = await Application.Current.MainPage.DisplayAlert("Delete?", "Are you sure want to delete your tweet data?", "Yes", "No");

		if(deleteData)
		{
			File.Delete(Constants.TweetsByYearFile);
			File.Delete(Constants.ProfilePictureFile);
		}
		
	}
}
