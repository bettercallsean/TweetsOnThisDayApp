@using System.Text.Json;
@using TweetsOnThisDay.Models;

@if(_fileUploaded)
{
	<Loading IsLoading=@_isLoading LoadingText="Processing tweet data" />
}
else
{
	<p>Get started by uploading your 'tweet.js' file here</p>
	<InputFile OnChange=@OnInputFileChanged />
}

@code {
	private bool _isLoading;
	private bool _fileUploaded;

	[Parameter] 
	public EventCallback TweetJsFileUploaded { get; set; }

	public async Task OnInputFileChanged(InputFileChangeEventArgs e)
	{
		_fileUploaded = true;
		_isLoading = true;

		var ms = new MemoryStream();
		await e.File.OpenReadStream(long.MaxValue).CopyToAsync(ms);
		var bytes = ms.ToArray();

		var tweetJsonTmp = System.Text.Encoding.Default.GetString(bytes).Split("\n");
		tweetJsonTmp[0] = "[";
		var tweetJson = string.Join("", tweetJsonTmp);

		try
		{
			var tweetData = JsonSerializer.Deserialize<List<Root>>(tweetJson);

			var tweets = tweetData
				.Select(x => x.Tweet)
				.OrderBy(x => x.CreatedAt)
				.GroupBy(x => new { x.CreatedAt.Day, x.CreatedAt.Month })
				.ToDictionary(x => $"{x.Key.Day}/{x.Key.Month}", x => x.ToList());

			await File.WriteAllTextAsync(Constants.TweetsByYearFile, JsonSerializer.Serialize(tweets));

			await TweetJsFileUploaded.InvokeAsync();
		}
		catch
		{
			_fileUploaded = false;
		}

		_isLoading = false;
	}
}
